@use 'sass:math';
@use 'sass:map';
@import './_variables.scss';

@mixin mobile {
  @media (max-width: #{$mobile-breakpoint}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$mobile-breakpoint}) {
    @content;
  }
}

@function mobile-vw($pixels, $base-vw: $mobile-width) {
  @return math.div($pixels * 100vw, $base-vw);
}

@function mobile-vh($pixels, $base-vh: $mobile-height) {
  @return math.div($pixels * 100vh, $base-vh);
}

@function desktop-vw($pixels, $base-vw: $desktop-width) {
  @return math.div($pixels * 100vw, $base-vw);
}

@function desktop-vh($pixels, $base-vh: $desktop-height) {
  @return math.div($pixels * 100vh, $base-vh);
}

@function columns($columns) {
  @return calc(
          (#{$columns} * var(--layout-column-width)) +
          ((#{$columns} - 1) * var(--layout-columns-gap))
  );
}

@mixin hover {
  @media (hover: hover) {
    @content;
  }
}
@mixin tinyDevice {
  @media (max-width: #{$mobile-width}) {
    @content;
  }
}

// layout
$layout: (
        'columns-count': (
                6,
                12,
        ),
        'columns-gap': (
                24px,
                24px,
        ),
        'margin': (
                16px,
                40px,
        ),
);


:root {
  --layout-columns-count: #{nth(map.get($layout, 'columns-count'), 1)};
  --layout-columns-gap: #{mobile-vw(nth(map.get($layout, 'columns-gap'), 1))};
  --layout-margin: #{mobile-vw(nth(map.get($layout, 'margin'), 1))};

  @include desktop {
    --layout-columns-count: #{nth(map.get($layout, 'columns-count'), 2)};
    --layout-columns-gap: #{desktop-vw(nth(map.get($layout, 'columns-gap'), 2))};
    --layout-margin: #{desktop-vw(nth(map.get($layout, 'margin'), 2))};
  }

  --layout-width: calc(100vw - (2 * var(--layout-margin)));
  --layout-column-width: calc(
          (
          var(--layout-width) -
          ((var(--layout-columns-count) - 1) * var(--layout-columns-gap))
          ) / var(--layout-columns-count)
  );
}

.layout-block {
  max-width: var(--layout-width);
  margin-left: auto;
  margin-right: auto;
}

.layout-block-inner {
  padding-left: var(--layout-margin);
  padding-right: var(--layout-margin);
}

.layout-grid {
  @extend .layout-block;

  display: grid;
  grid-template-columns: repeat(var(--layout-columns-count), minmax(0, 1fr));
  grid-gap: var(--layout-columns-gap);
}

.layout-grid-inner {
  @extend .layout-block-inner;

  display: grid;
  grid-template-columns: repeat(var(--layout-columns-count), minmax(0, 1fr));
  grid-gap: var(--layout-columns-gap);
}